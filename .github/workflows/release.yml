name: Build for release

on:
  push:
    tags:
      - "v*.*.*"

env:
  BUILD_TYPE: Release

jobs:
  build:
    concurrency: ci-${{ github.ref }} # Recommended if you intend to make multiple deployments in quick succession.
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - uses: actions/setup-node@v2
      with:
          node-version: 14.x
          cache: yarn
          cache-dependency-path: website

    - name: Build website
      working-directory: website
      run: |
        yarn install --frozen-lockfile
        npm run docusaurus docs:version ${{github.ref_name}}
        yarn build

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        # Build output to publish to the `gh-pages` branch:
        publish_dir: ./website/build
        # Assign commit authorship to the official GH-Actions bot for deploys to `gh-pages` branch:
        # https://github.com/actions/checkout/issues/13#issuecomment-724415212
        # The GH actions bot is used by default if you didn't specify the two fields.
        # You can swap them out with your own user credentials.
        user_name: github-actions[bot]
        user_email: 41898282+github-actions[bot]@users.noreply.github.com

    - name: Commit report
      run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git add website/
          git commit -am "Update docs for ${{github.ref_name}}"
          git push origin HEAD:main

    - name: Install deps
      run: sudo apt install cmake gcc-arm-none-eabi libnewlib-arm-none-eabi libstdc++-arm-none-eabi-newlib

    - name: Install SDK
      uses: actions/checkout@v2.4.0
      with:
        repository: raspberrypi/pico-sdk
        path: pico-sdk
        submodules: true

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DPICO_SDK_PATH=pico-sdk

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}
    
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ${{github.workspace}}/build/*.uf2
      
